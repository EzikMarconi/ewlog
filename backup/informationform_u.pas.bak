unit InformationForm_U;

{$mode objfpc}{$H+}

interface

uses
  Classes, SysUtils, FileUtil, Forms, Controls, Graphics, Dialogs, StdCtrls,
  EditBtn, ExtCtrls, httpsend, simplexml, LCLIntf;

type

  { TInformationForm }

  TInformationForm = class(TForm)
    Button1: TButton;
    Button2: TButton;
    Button3: TButton;
    Button4: TButton;
    Button5: TButton;
    Button6: TButton;
    CheckBox1: TCheckBox;
    CheckBox2: TCheckBox;
    CheckBox3: TCheckBox;
    DirectoryEdit1: TDirectoryEdit;
    GroupBox1: TGroupBox;
    GroupBox2: TGroupBox;
    Image1: TImage;
    Label1: TLabel;
    Label10: TLabel;
    Label11: TLabel;
    Label12: TLabel;
    Label13: TLabel;
    Label14: TLabel;
    Label15: TLabel;
    Label16: TLabel;
    Label17: TLabel;
    Label18: TLabel;
    Label19: TLabel;
    Label2: TLabel;
    Label20: TLabel;
    Label21: TLabel;
    Label22: TLabel;
    Label23: TLabel;
    Label24: TLabel;
    Label25: TLabel;
    Label26: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    Label7: TLabel;
    Label8: TLabel;
    Label9: TLabel;
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure Button5Click(Sender: TObject);
    procedure Button6Click(Sender: TObject);
    procedure FormClose(Sender: TObject; var CloseAction: TCloseAction);
    procedure FormShow(Sender: TObject);
    function QRZRU(CallS: string): string;
    function HAMQTH(CallS: string): string;
    function QRZCOM(CallS: string): string;
  private
    calsign:string;
    ErrorCall:string;
    { private declarations }
  public
    { public declarations }
  end;

var
  InformationForm: TInformationForm;

implementation

uses MainForm_U, editqso_u;

{$R *.lfm}

{ TInformationForm }
function TInformationForm.QRZRU(CallS: string): string;
var
  sessionNum: string;
  XMLDoc: IXmlDocument;
  XMLNode: IXmlNode;
  PhotoString: string;
  Photo: TJPEGImage;
begin
  try
    XMLDoc := CreateXmlDocument;
    Photo := TJPEGImage.Create;
    PhotoString:='';
    Photo.Clear;

    with THTTPSend.Create do
    begin
      if HTTPMethod('GET', 'http://api.qrz.ru/login?u=ew8bak&p=Cq7jK8nxspCPv') then
      begin
        XMLDoc.Load(Document);
      end;
    end;

    XMLNode := XMLDoc.DocumentElement.SelectSingleNode('Session');
    sessionNum := XMLNode.SelectSingleNode('session_id').Text;

    with THTTPSend.Create do
    begin
      if HTTPMethod('GET', 'http://api.qrz.ru/callsign?id=' +
        SessionNum + '&callsign=' + CallS) then
      begin
        XMLDoc.Load(Document);
      end;
    end;

    try begin
     XMLNode := XMLDoc.DocumentElement.SelectSingleNode('session');
    ErrorCall:=XMLNode.SelectSingleNode('error').Text;
    end;
    except
    end;

    XMLNode := XMLDoc.DocumentElement.SelectSingleNode('Callsign');
    try
      Label14.Caption := XMLNode.SelectSingleNode('call').Text;
      Result := XMLNode.SelectSingleNode('call').Text;
      GroupBox1.Caption := XMLNode.SelectSingleNode('call').Text;
    except
    end;
    try
      Label15.Caption := XMLNode.SelectSingleNode('country').Text;
    except
    end;
    try
      Label16.Caption := XMLNode.SelectSingleNode('name').Text;
    except
    end;
    try
      Label17.Caption := XMLNode.SelectSingleNode('street').Text;
    except
    end;
    try
      Label18.Caption := XMLNode.SelectSingleNode('city').Text;
    except
    end;
    try
      Label19.Caption := XMLNode.SelectSingleNode('qthloc').Text;
    except
    end;
    try
      Label20.Caption := XMLNode.SelectSingleNode('url').Text;
    except
    end;
    try
      Label21.Caption := XMLNode.SelectSingleNode('state').Text;
    except
    end;
    try
      Label22.Caption := XMLNode.SelectSingleNode('telephone').Text;
    except
    end;
    try
      Label23.Caption := XMLNode.SelectSingleNode('email').Text;
    except
    end;
    try
      Label24.Caption := XMLNode.SelectSingleNode('icq').Text;
    except
    end;
    try
      Label25.Caption := XMLNode.SelectSingleNode('qslvia').Text;
    except
    end;

    XMLNode := XMLDoc.DocumentElement.SelectSingleNode('Files');
    try
      PhotoString := XMLNode.SelectSingleNode('file').Text;
    except
    end;

    if PhotoString <> '' then
    begin
      InformationForm.Height := 658;
      with THTTPSend.Create do
      begin
        if HTTPMethod('GET', PhotoString) then
        begin
          Photo.LoadFromStream(Document);
        end;
      end;
      Image1.Picture.Assign(Photo);
    end
    else
      InformationForm.Height := 364;
  finally
    Photo.Free;
  end;
end;

function TInformationForm.HAMQTH(CallS: string): string;
var
  sessionNum: string;
  XMLDoc: IXmlDocument;
  XMLNode: IXmlNode;
  PhotoString: string;
  Photo: TJPEGImage;
begin
  try
    XMLDoc := CreateXmlDocument;
    Photo := TJPEGImage.Create;

    with THTTPSend.Create do
    begin
      if HTTPMethod('GET', 'http://www.hamqth.com/xml.php?u=ew8bak&p=Ml197895551ml') then
      begin
        XMLDoc.Load(Document);
      end;
    end;

    XMLNode := XMLDoc.DocumentElement.SelectSingleNode('session');
    sessionNum := XMLNode.SelectSingleNode('session_id').Text;

    with THTTPSend.Create do
    begin
      if HTTPMethod('GET', 'http://www.hamqth.com/xml.php?id=' +
        SessionNum + '&callsign=' + CallS + '&prg=EWLog') then
      begin
        XMLDoc.Load(Document);
      end;
    end;

    try begin
     XMLNode := XMLDoc.DocumentElement.SelectSingleNode('session');
     ErrorCall:=XMLNode.SelectSingleNode('error').Text;
    end;
    except
    end;


    XMLNode := XMLDoc.DocumentElement.SelectSingleNode('search');
    try
      Label14.Caption := XMLNode.SelectSingleNode('callsign').Text;
      Result := XMLNode.SelectSingleNode('callsign').Text;
      GroupBox1.Caption := XMLNode.SelectSingleNode('callsign').Text;
    except
    end;
    try
      Label15.Caption := XMLNode.SelectSingleNode('country').Text;
    except
    end;
    try
      Label16.Caption := XMLNode.SelectSingleNode('nick').Text;
    except
    end;
    try
      Label17.Caption := XMLNode.SelectSingleNode('street').Text;
    except
    end;
    try
      Label18.Caption := XMLNode.SelectSingleNode('adr_city').Text;
    except
    end;
    try
      Label19.Caption := XMLNode.SelectSingleNode('grid').Text;
    except
    end;
    try
      Label20.Caption := XMLNode.SelectSingleNode('web').Text;
    except
    end;
    try
      Label21.Caption := XMLNode.SelectSingleNode('state').Text;
    except
    end;
    try
      Label22.Caption := XMLNode.SelectSingleNode('telephone').Text;
    except
    end;
    try
      Label23.Caption := XMLNode.SelectSingleNode('email').Text;
    except
    end;
    try
      Label24.Caption := XMLNode.SelectSingleNode('icq').Text;
    except
    end;
    try
      Label25.Caption := XMLNode.SelectSingleNode('qslvia').Text;
    except
    end;

    try
      PhotoString := XMLNode.SelectSingleNode('picture').Text;
    except
    end;

    if PhotoString <> '' then
    begin
      InformationForm.Height := 658;
      with THTTPSend.Create do
      begin
        if HTTPMethod('GET', PhotoString) then
        begin
          Photo.LoadFromStream(Document);
        end;
      end;
      Image1.Picture.Assign(Photo);
    end
    else
      InformationForm.Height := 364;
  finally
    Photo.Free;
  end;
end;

function TInformationForm.QRZCOM(CallS: string): string;
var
  sessionNum: string;
  XMLDoc: IXmlDocument;
  XMLNode: IXmlNode;
  PhotoString: string;
  Photo: TJPEGImage;
begin
  try
    XMLDoc := CreateXmlDocument;
    Photo := TJPEGImage.Create;

    with THTTPSend.Create do
    begin
      if HTTPMethod('GET',
        ' http://xmldata.qrz.com/xml/?username=ew8bak;password=Ml197895551ml;agent=EWLog')
      then
      begin
        XMLDoc.Load(Document);
      end;
    end;

    XMLNode := XMLDoc.DocumentElement.SelectSingleNode('Session');
    sessionNum := XMLNode.SelectSingleNode('Key').Text;

    with THTTPSend.Create do
    begin
      if HTTPMethod('GET', 'http://xmldata.qrz.com/xml/current/?s=' +
        SessionNum + ';callsign=' + CallS) then
      begin
        XMLDoc.Load(Document);
      end;
    end;

    try begin
     XMLNode := XMLDoc.DocumentElement.SelectSingleNode('Session');
     ErrorCall:=XMLNode.SelectSingleNode('Error').Text;
    end;
    except
    end;

    XMLNode := XMLDoc.DocumentElement.SelectSingleNode('Callsign');
    try
      Label14.Caption := XMLNode.SelectSingleNode('call').Text;
      Result := XMLNode.SelectSingleNode('call').Text;
      GroupBox1.Caption := XMLNode.SelectSingleNode('call').Text;
    except
    end;
    try
      Label15.Caption := XMLNode.SelectSingleNode('country').Text;
    except
    end;
    try
      Label16.Caption := XMLNode.SelectSingleNode('fname').Text;
    except
    end;
    try
      Label17.Caption := XMLNode.SelectSingleNode('addr1').Text;
    except
    end;
    try
      Label18.Caption := XMLNode.SelectSingleNode('addr2').Text;
    except
    end;
    try
      Label19.Caption := XMLNode.SelectSingleNode('grid').Text;
    except
    end;
    try
      Label20.Caption := XMLNode.SelectSingleNode('url').Text;
    except
    end;
    try
      Label21.Caption := XMLNode.SelectSingleNode('state').Text;
    except
    end;
    try
      Label22.Caption := XMLNode.SelectSingleNode('telephone').Text;
    except
    end;
    try
      Label23.Caption := XMLNode.SelectSingleNode('email').Text;
    except
    end;
    try
      Label24.Caption := XMLNode.SelectSingleNode('icq').Text;
    except
    end;
    try
      Label25.Caption := XMLNode.SelectSingleNode('qslvia').Text;
    except
    end;

    try
      PhotoString := XMLNode.SelectSingleNode('image').Text;
    except
    end;

    if PhotoString <> '' then
    begin
      InformationForm.Height := 658;
      with THTTPSend.Create do
      begin
        if HTTPMethod('GET', PhotoString) then
        begin
          Photo.LoadFromStream(Document);
        end;
      end;
      Image1.Picture.Assign(Photo);
    end
    else
      InformationForm.Height := 364;
  finally
    Photo.Free;
  end;
end;

procedure TInformationForm.FormShow(Sender: TObject);
begin
  ErrorCall:='';

  if (MainForm.EditButton1.Text <> '') and (EditQSO_Form.Edit1.Text = '') then
    calsign:=QRZRU(MainForm.EditButton1.Text)
  else
  if (EditQSO_Form.Edit1.Text <> '') and (MainForm.EditButton1.Text <> '') then
    calsign:=QRZRU(EditQSO_Form.Edit1.Text)
  else
  if EditQSO_Form.Edit1.Text <> '' then
    calsign:=QRZRU(EditQSO_Form.Edit1.Text);
  InformationForm.Caption:='Информация из QRZ.ru';

    if ErrorCall <> '' then begin
    ErrorCall:='';
    calsign:=QRZCOM(EditQSO_Form.Edit1.Text);
    InformationForm.Caption:='Информация из QRZ.com';
    end;

    if ErrorCall <> '' then begin
    calsign:=HAMQTH(EditQSO_Form.Edit1.Text);
    InformationForm.Caption:='Информация из HAMQTH.com';
    end;

end;

procedure TInformationForm.FormClose(Sender: TObject; var CloseAction: TCloseAction);
begin
  Label14.Caption := '';
  Label15.Caption := '';
  Label16.Caption := '';
  Label17.Caption := '';
  Label18.Caption := '';
  Label19.Caption := '';
  Label20.Caption := '';
  Label21.Caption := '';
  Label22.Caption := '';
  Label23.Caption := '';
  Label23.Caption := '';
  Label24.Caption := '';
  Label25.Caption := '';
  Label26.Caption := '';
  GroupBox1.Caption:='Позывной';

end;

procedure TInformationForm.Button1Click(Sender: TObject);
begin
  if CheckForm='Main' then begin
  MainForm.EditButton1.Text := Label14.Caption;
  MainForm.Edit1.Text := Label16.Caption;
  MainForm.Edit2.Text := Label18.Caption;
  MainForm.Edit3.Text := Label19.Caption;
  MainForm.Edit4.Text:= Label21.Caption;
  end;
  if CheckForm='Edit' then begin
  EditQSO_Form.Edit4.Text:=Label16.Caption;
  EditQSO_Form.Edit5.Text:=Label18.Caption;
  if Label19.Caption<>'' then
  EditQSO_Form.Edit14.Text:=Label19.Caption;
  if Label21.Caption<>'' then
  EditQSO_Form.Edit17.Text:=Label21.Caption;
  end;
end;

procedure TInformationForm.Button2Click(Sender: TObject);
begin
  OpenURL('http://qrzcq.com/call/'+calsign);
end;

procedure TInformationForm.Button3Click(Sender: TObject);
begin
  OpenURL('http://www.qrz.ru/db/'+calsign);
end;

procedure TInformationForm.Button5Click(Sender: TObject);
begin
  OpenURL('https://www.pskreporter.info/pskmap.html?callsign='+calsign+'&search=Find');
end;

procedure TInformationForm.Button6Click(Sender: TObject);
begin
  OpenURL('https://secure.clublog.org/logsearch/'+calsign);
end;

end.
